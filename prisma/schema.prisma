// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Quiz          Quiz[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum QuestionType {
  CHOICE_SINGLE
  CHOICE_MULTIPLE
  ESTIMATE_FLOAT
  ESTIMATE_INT
  TEXT_GUESS
}

model Question {
  id             String       @id @default(cuid())
  type           QuestionType @default(CHOICE_SINGLE)
  question_text  String
  answers        Answer[]
  answer_numeric Float?       @default(0)
  time_limit     Int?
  Quiz           Quiz?        @relation(fields: [quizId], references: [id])
  quizId         String?
}

model Answer {
  id          Int      @id @default(autoincrement())
  answer_text String
  question    Question @relation(references: [id], fields: [question_id])
  question_id String
  is_solution Boolean
}

model Quiz {
  id        String     @id @default(cuid())
  owner     User?      @relation(fields: [userId], references: [id])
  questions Question[]
  userId    String?
}
